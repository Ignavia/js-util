{
  "type": "Program",
  "body": [
    {
      "type": "ImportDeclaration",
      "specifiers": [
        {
          "type": "ImportDefaultSpecifier",
          "local": {
            "type": "Identifier",
            "name": "Cloner",
            "range": [
              7,
              13
            ],
            "loc": {
              "start": {
                "line": 1,
                "column": 7
              },
              "end": {
                "line": 1,
                "column": 13
              }
            }
          },
          "range": [
            7,
            13
          ],
          "loc": {
            "start": {
              "line": 1,
              "column": 7
            },
            "end": {
              "line": 1,
              "column": 13
            }
          }
        }
      ],
      "source": {
        "type": "Literal",
        "value": "./Cloner",
        "raw": "\"./Cloner\"",
        "range": [
          19,
          29
        ],
        "loc": {
          "start": {
            "line": 1,
            "column": 19
          },
          "end": {
            "line": 1,
            "column": 29
          }
        }
      },
      "range": [
        0,
        30
      ],
      "loc": {
        "start": {
          "line": 1,
          "column": 0
        },
        "end": {
          "line": 1,
          "column": 30
        }
      },
      "trailingComments": [
        {
          "type": "Block",
          "value": "*\r\n * Contains symbols for the methods of the Cloneable interface.\r\n *\r\n * @type {Object}\r\n ",
          "range": [
            34,
            130
          ],
          "loc": {
            "start": {
              "line": 3,
              "column": 0
            },
            "end": {
              "line": 7,
              "column": 3
            }
          }
        }
      ]
    },
    {
      "type": "ExportNamedDeclaration",
      "declaration": {
        "type": "VariableDeclaration",
        "declarations": [
          {
            "type": "VariableDeclarator",
            "id": {
              "type": "Identifier",
              "name": "cloneableSymbols",
              "range": [
                145,
                161
              ],
              "loc": {
                "start": {
                  "line": 8,
                  "column": 13
                },
                "end": {
                  "line": 8,
                  "column": 29
                }
              }
            },
            "init": {
              "type": "ObjectExpression",
              "properties": [
                {
                  "type": "Property",
                  "key": {
                    "type": "Identifier",
                    "name": "clone",
                    "range": [
                      171,
                      176
                    ],
                    "loc": {
                      "start": {
                        "line": 9,
                        "column": 4
                      },
                      "end": {
                        "line": 9,
                        "column": 9
                      }
                    }
                  },
                  "value": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "Symbol",
                      "range": [
                        178,
                        184
                      ],
                      "loc": {
                        "start": {
                          "line": 9,
                          "column": 11
                        },
                        "end": {
                          "line": 9,
                          "column": 17
                        }
                      }
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "value": "clone",
                        "raw": "\"clone\"",
                        "range": [
                          185,
                          192
                        ],
                        "loc": {
                          "start": {
                            "line": 9,
                            "column": 18
                          },
                          "end": {
                            "line": 9,
                            "column": 25
                          }
                        }
                      }
                    ],
                    "range": [
                      178,
                      193
                    ],
                    "loc": {
                      "start": {
                        "line": 9,
                        "column": 11
                      },
                      "end": {
                        "line": 9,
                        "column": 26
                      }
                    }
                  },
                  "kind": "init",
                  "method": false,
                  "shorthand": false,
                  "computed": false,
                  "range": [
                    171,
                    193
                  ],
                  "loc": {
                    "start": {
                      "line": 9,
                      "column": 4
                    },
                    "end": {
                      "line": 9,
                      "column": 26
                    }
                  }
                }
              ],
              "range": [
                164,
                196
              ],
              "loc": {
                "start": {
                  "line": 8,
                  "column": 32
                },
                "end": {
                  "line": 10,
                  "column": 1
                }
              }
            },
            "range": [
              145,
              196
            ],
            "loc": {
              "start": {
                "line": 8,
                "column": 13
              },
              "end": {
                "line": 10,
                "column": 1
              }
            }
          }
        ],
        "kind": "const",
        "range": [
          139,
          197
        ],
        "loc": {
          "start": {
            "line": 8,
            "column": 7
          },
          "end": {
            "line": 10,
            "column": 2
          }
        },
        "leadingComments": [
          {
            "type": "Block",
            "value": "*\r\n * Contains symbols for the methods of the Cloneable interface.\r\n *\r\n * @type {Object}\r\n ",
            "range": [
              34,
              130
            ],
            "loc": {
              "start": {
                "line": 3,
                "column": 0
              },
              "end": {
                "line": 7,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "Block",
            "value": "*\r\n * An interface for every object that can be cloned.\r\n *\r\n * @interface\r\n ",
            "range": [
              201,
              282
            ],
            "loc": {
              "start": {
                "line": 12,
                "column": 0
              },
              "end": {
                "line": 16,
                "column": 3
              }
            }
          }
        ]
      },
      "specifiers": [],
      "source": null,
      "range": [
        132,
        197
      ],
      "loc": {
        "start": {
          "line": 8,
          "column": 0
        },
        "end": {
          "line": 10,
          "column": 2
        }
      },
      "leadingComments": [
        {
          "type": "Block",
          "value": "*\r\n * Contains symbols for the methods of the Cloneable interface.\r\n *\r\n * @type {Object}\r\n ",
          "range": [
            34,
            130
          ],
          "loc": {
            "start": {
              "line": 3,
              "column": 0
            },
            "end": {
              "line": 7,
              "column": 3
            }
          }
        }
      ],
      "trailingComments": [
        {
          "type": "Block",
          "value": "*\r\n * An interface for every object that can be cloned.\r\n *\r\n * @interface\r\n ",
          "range": [
            201,
            282
          ],
          "loc": {
            "start": {
              "line": 12,
              "column": 0
            },
            "end": {
              "line": 16,
              "column": 3
            }
          }
        }
      ]
    },
    {
      "type": "ExportDefaultDeclaration",
      "declaration": {
        "type": "ClassDeclaration",
        "id": {
          "type": "Identifier",
          "name": "Cloneable",
          "range": [
            305,
            314
          ],
          "loc": {
            "start": {
              "line": 17,
              "column": 21
            },
            "end": {
              "line": 17,
              "column": 30
            }
          }
        },
        "superClass": null,
        "body": {
          "type": "ClassBody",
          "body": [
            {
              "type": "MethodDefinition",
              "key": {
                "type": "MemberExpression",
                "computed": false,
                "object": {
                  "type": "Identifier",
                  "name": "cloneableSymbols",
                  "range": [
                    441,
                    457
                  ],
                  "loc": {
                    "start": {
                      "line": 25,
                      "column": 5
                    },
                    "end": {
                      "line": 25,
                      "column": 21
                    }
                  }
                },
                "property": {
                  "type": "Identifier",
                  "name": "clone",
                  "range": [
                    458,
                    463
                  ],
                  "loc": {
                    "start": {
                      "line": 25,
                      "column": 22
                    },
                    "end": {
                      "line": 25,
                      "column": 27
                    }
                  }
                },
                "range": [
                  441,
                  463
                ],
                "loc": {
                  "start": {
                    "line": 25,
                    "column": 5
                  },
                  "end": {
                    "line": 25,
                    "column": 27
                  }
                }
              },
              "value": {
                "type": "FunctionExpression",
                "id": null,
                "params": [],
                "body": {
                  "type": "BlockStatement",
                  "body": [],
                  "range": [
                    467,
                    469
                  ],
                  "loc": {
                    "start": {
                      "line": 25,
                      "column": 31
                    },
                    "end": {
                      "line": 25,
                      "column": 33
                    }
                  }
                },
                "generator": false,
                "expression": false,
                "range": [
                  464,
                  469
                ],
                "loc": {
                  "start": {
                    "line": 25,
                    "column": 28
                  },
                  "end": {
                    "line": 25,
                    "column": 33
                  }
                }
              },
              "kind": "method",
              "computed": true,
              "range": [
                440,
                469
              ],
              "loc": {
                "start": {
                  "line": 25,
                  "column": 4
                },
                "end": {
                  "line": 25,
                  "column": 33
                }
              },
              "static": false
            }
          ],
          "range": [
            315,
            472
          ],
          "loc": {
            "start": {
              "line": 17,
              "column": 31
            },
            "end": {
              "line": 26,
              "column": 1
            }
          }
        },
        "range": [
          299,
          472
        ],
        "loc": {
          "start": {
            "line": 17,
            "column": 15
          },
          "end": {
            "line": 26,
            "column": 1
          }
        },
        "leadingComments": [
          {
            "type": "Block",
            "value": "*\r\n * An interface for every object that can be cloned.\r\n *\r\n * @interface\r\n ",
            "range": [
              201,
              282
            ],
            "loc": {
              "start": {
                "line": 12,
                "column": 0
              },
              "end": {
                "line": 16,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "Block",
            "value": "*\r\n * A mixin for Cloneable behavior.\r\n *\r\n * @type {Object}\r\n *\r\n * @example\r\n * Object.assign(MyClass.prototype, cloneableMixin);\r\n * let myObject = new MyClass(),\r\n *     clone    = myObject[cloneableSymbols.clone]\r\n ",
            "range": [
              476,
              700
            ],
            "loc": {
              "start": {
                "line": 28,
                "column": 0
              },
              "end": {
                "line": 37,
                "column": 3
              }
            }
          }
        ]
      },
      "range": [
        284,
        472
      ],
      "loc": {
        "start": {
          "line": 17,
          "column": 0
        },
        "end": {
          "line": 26,
          "column": 1
        }
      },
      "leadingComments": [
        {
          "type": "Block",
          "value": "*\r\n * An interface for every object that can be cloned.\r\n *\r\n * @interface\r\n ",
          "range": [
            201,
            282
          ],
          "loc": {
            "start": {
              "line": 12,
              "column": 0
            },
            "end": {
              "line": 16,
              "column": 3
            }
          }
        }
      ],
      "trailingComments": [
        {
          "type": "Block",
          "value": "*\r\n * A mixin for Cloneable behavior.\r\n *\r\n * @type {Object}\r\n *\r\n * @example\r\n * Object.assign(MyClass.prototype, cloneableMixin);\r\n * let myObject = new MyClass(),\r\n *     clone    = myObject[cloneableSymbols.clone]\r\n ",
          "range": [
            476,
            700
          ],
          "loc": {
            "start": {
              "line": 28,
              "column": 0
            },
            "end": {
              "line": 37,
              "column": 3
            }
          }
        }
      ]
    },
    {
      "type": "ExportNamedDeclaration",
      "declaration": {
        "type": "VariableDeclaration",
        "declarations": [
          {
            "type": "VariableDeclarator",
            "id": {
              "type": "Identifier",
              "name": "cloneableMixin",
              "range": [
                715,
                729
              ],
              "loc": {
                "start": {
                  "line": 38,
                  "column": 13
                },
                "end": {
                  "line": 38,
                  "column": 27
                }
              }
            },
            "init": {
              "type": "ObjectExpression",
              "properties": [
                {
                  "type": "Property",
                  "key": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "cloneableSymbols",
                      "range": [
                        740,
                        756
                      ],
                      "loc": {
                        "start": {
                          "line": 39,
                          "column": 5
                        },
                        "end": {
                          "line": 39,
                          "column": 21
                        }
                      }
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "clone",
                      "range": [
                        757,
                        762
                      ],
                      "loc": {
                        "start": {
                          "line": 39,
                          "column": 22
                        },
                        "end": {
                          "line": 39,
                          "column": 27
                        }
                      }
                    },
                    "range": [
                      740,
                      762
                    ],
                    "loc": {
                      "start": {
                        "line": 39,
                        "column": 5
                      },
                      "end": {
                        "line": 39,
                        "column": 27
                      }
                    }
                  },
                  "value": {
                    "type": "FunctionExpression",
                    "id": null,
                    "params": [
                      {
                        "type": "AssignmentPattern",
                        "left": {
                          "type": "Identifier",
                          "name": "cloner",
                          "range": [
                            764,
                            770
                          ],
                          "loc": {
                            "start": {
                              "line": 39,
                              "column": 29
                            },
                            "end": {
                              "line": 39,
                              "column": 35
                            }
                          }
                        },
                        "right": {
                          "type": "NewExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "Cloner",
                            "range": [
                              777,
                              783
                            ],
                            "loc": {
                              "start": {
                                "line": 39,
                                "column": 42
                              },
                              "end": {
                                "line": 39,
                                "column": 48
                              }
                            }
                          },
                          "arguments": [],
                          "range": [
                            773,
                            785
                          ],
                          "loc": {
                            "start": {
                              "line": 39,
                              "column": 38
                            },
                            "end": {
                              "line": 39,
                              "column": 50
                            }
                          }
                        },
                        "range": [
                          764,
                          785
                        ],
                        "loc": {
                          "start": {
                            "line": 39,
                            "column": 29
                          },
                          "end": {
                            "line": 39,
                            "column": 50
                          }
                        }
                      }
                    ],
                    "body": {
                      "type": "BlockStatement",
                      "body": [
                        {
                          "type": "ReturnStatement",
                          "argument": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "cloner",
                                "range": [
                                  805,
                                  811
                                ],
                                "loc": {
                                  "start": {
                                    "line": 40,
                                    "column": 15
                                  },
                                  "end": {
                                    "line": 40,
                                    "column": 21
                                  }
                                }
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "clone",
                                "range": [
                                  812,
                                  817
                                ],
                                "loc": {
                                  "start": {
                                    "line": 40,
                                    "column": 22
                                  },
                                  "end": {
                                    "line": 40,
                                    "column": 27
                                  }
                                }
                              },
                              "range": [
                                805,
                                817
                              ],
                              "loc": {
                                "start": {
                                  "line": 40,
                                  "column": 15
                                },
                                "end": {
                                  "line": 40,
                                  "column": 27
                                }
                              }
                            },
                            "arguments": [
                              {
                                "type": "ThisExpression",
                                "range": [
                                  818,
                                  822
                                ],
                                "loc": {
                                  "start": {
                                    "line": 40,
                                    "column": 28
                                  },
                                  "end": {
                                    "line": 40,
                                    "column": 32
                                  }
                                }
                              }
                            ],
                            "range": [
                              805,
                              823
                            ],
                            "loc": {
                              "start": {
                                "line": 40,
                                "column": 15
                              },
                              "end": {
                                "line": 40,
                                "column": 33
                              }
                            }
                          },
                          "range": [
                            798,
                            824
                          ],
                          "loc": {
                            "start": {
                              "line": 40,
                              "column": 8
                            },
                            "end": {
                              "line": 40,
                              "column": 34
                            }
                          }
                        }
                      ],
                      "range": [
                        787,
                        831
                      ],
                      "loc": {
                        "start": {
                          "line": 39,
                          "column": 52
                        },
                        "end": {
                          "line": 41,
                          "column": 5
                        }
                      }
                    },
                    "generator": false,
                    "expression": false,
                    "range": [
                      763,
                      831
                    ],
                    "loc": {
                      "start": {
                        "line": 39,
                        "column": 28
                      },
                      "end": {
                        "line": 41,
                        "column": 5
                      }
                    }
                  },
                  "kind": "init",
                  "method": true,
                  "shorthand": false,
                  "computed": true,
                  "range": [
                    739,
                    831
                  ],
                  "loc": {
                    "start": {
                      "line": 39,
                      "column": 4
                    },
                    "end": {
                      "line": 41,
                      "column": 5
                    }
                  }
                }
              ],
              "range": [
                732,
                834
              ],
              "loc": {
                "start": {
                  "line": 38,
                  "column": 30
                },
                "end": {
                  "line": 42,
                  "column": 1
                }
              }
            },
            "range": [
              715,
              834
            ],
            "loc": {
              "start": {
                "line": 38,
                "column": 13
              },
              "end": {
                "line": 42,
                "column": 1
              }
            }
          }
        ],
        "kind": "const",
        "range": [
          709,
          835
        ],
        "loc": {
          "start": {
            "line": 38,
            "column": 7
          },
          "end": {
            "line": 42,
            "column": 2
          }
        },
        "leadingComments": [
          {
            "type": "Block",
            "value": "*\r\n * A mixin for Cloneable behavior.\r\n *\r\n * @type {Object}\r\n *\r\n * @example\r\n * Object.assign(MyClass.prototype, cloneableMixin);\r\n * let myObject = new MyClass(),\r\n *     clone    = myObject[cloneableSymbols.clone]\r\n ",
            "range": [
              476,
              700
            ],
            "loc": {
              "start": {
                "line": 28,
                "column": 0
              },
              "end": {
                "line": 37,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": []
      },
      "specifiers": [],
      "source": null,
      "range": [
        702,
        835
      ],
      "loc": {
        "start": {
          "line": 38,
          "column": 0
        },
        "end": {
          "line": 42,
          "column": 2
        }
      },
      "leadingComments": [
        {
          "type": "Block",
          "value": "*\r\n * A mixin for Cloneable behavior.\r\n *\r\n * @type {Object}\r\n *\r\n * @example\r\n * Object.assign(MyClass.prototype, cloneableMixin);\r\n * let myObject = new MyClass(),\r\n *     clone    = myObject[cloneableSymbols.clone]\r\n ",
          "range": [
            476,
            700
          ],
          "loc": {
            "start": {
              "line": 28,
              "column": 0
            },
            "end": {
              "line": 37,
              "column": 3
            }
          }
        }
      ]
    }
  ],
  "sourceType": "module",
  "range": [
    0,
    835
  ],
  "loc": {
    "start": {
      "line": 1,
      "column": 0
    },
    "end": {
      "line": 42,
      "column": 2
    }
  },
  "comments": [
    {
      "type": "Block",
      "value": "*\r\n * Contains symbols for the methods of the Cloneable interface.\r\n *\r\n * @type {Object}\r\n ",
      "range": [
        34,
        130
      ],
      "loc": {
        "start": {
          "line": 3,
          "column": 0
        },
        "end": {
          "line": 7,
          "column": 3
        }
      }
    },
    {
      "type": "Block",
      "value": "*\r\n * An interface for every object that can be cloned.\r\n *\r\n * @interface\r\n ",
      "range": [
        201,
        282
      ],
      "loc": {
        "start": {
          "line": 12,
          "column": 0
        },
        "end": {
          "line": 16,
          "column": 3
        }
      }
    },
    {
      "type": "Block",
      "value": "*\r\n     * Returns a copy of this object.\r\n     *\r\n     * @return {*}\r\n     * A copy of this object.\r\n     ",
      "range": [
        324,
        434
      ],
      "loc": {
        "start": {
          "line": 19,
          "column": 4
        },
        "end": {
          "line": 24,
          "column": 7
        }
      }
    },
    {
      "type": "Block",
      "value": "*\r\n * A mixin for Cloneable behavior.\r\n *\r\n * @type {Object}\r\n *\r\n * @example\r\n * Object.assign(MyClass.prototype, cloneableMixin);\r\n * let myObject = new MyClass(),\r\n *     clone    = myObject[cloneableSymbols.clone]\r\n ",
      "range": [
        476,
        700
      ],
      "loc": {
        "start": {
          "line": 28,
          "column": 0
        },
        "end": {
          "line": 37,
          "column": 3
        }
      }
    }
  ]
}